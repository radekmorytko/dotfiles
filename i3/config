## Variables
set $mod Mod1

set $browser browser_private()

set $inner_gaps 3
set $outer_gaps 0

set $term --no-startup-id kitty

set $monitor_output HDMI-2
set $laptop_output eDP-1

set $window_work_terminal_backend_class work-terminal-backend
set $window_work_terminal_live_class work-terminal-live
set $window_work_terminal_misc_class work-terminal-misc
set $window_work_1_browser_class work-1-google-chrome
set $window_private_browser_class private-google-chrome


default_border pixel 2

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork


# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

bindsym $mod+b exec $browser

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu -b -i'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+Shift+h split h

# split in vertical orientation
#bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: wn-terminal-backend"
set $ws2 "2: wn-terminal-live"
set $ws3 "3: wn-terminal-misc"
set $ws4 "4: wn-browser"
set $ws5 "5: private-browser"
set $ws6 "6: misc"
set $ws7 "7: misc"
set $ws8 "8: signal"
set $ws9 "9: slack"
set $ws10 "10: spotify"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+semicolon exec "i3lock -c 000000"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        status_command i3status --config ~/.config/i3status/config-top
        tray_output primary
        workspace_buttons yes
        font pango:FuraCode Nerd Font Mono 10
}

bar {
        position bottom
        status_command i3status --config ~/.config/i3status/config-bottom
        tray_output none
        workspace_buttons no
        font pango:FuraCode Nerd Font Mono 11
}

bindsym $mod+p exec flameshot gui

# ------ startup

## natural scrolling by touchbar

exec synclient VertScrollDelta=-71 synclient HorizScrollDelta=-71

workspace $ws1 output $monitor_output
workspace $ws2 output $monitor_output
workspace $ws3 output $monitor_output
workspace $ws4 output $monitor_output
workspace $ws5 output $monitor_output

workspace $ws6 output $laptop_output
workspace $ws7 output $laptop_output
workspace $ws8 output $laptop_output
workspace $ws9 output $laptop_output
workspace $ws10 output $laptop_output

# apps to show on the laptop
for_window [class="Spotify"] move container to workspace $ws10
assign [class="Signal"] $ws8
assign [class="Slack"] $ws9

assign [class=$window_work_terminal_backend_class] $ws1
assign [class=$window_work_terminal_live_class] $ws2
assign [class=$window_work_terminal_misc_class] $ws3

# browser-workspace assignments
assign [class=$window_work_1_browser_class] $ws4
assign [class=$window_private_browser_class] $ws5

# --no-startup-id is implied (in $term)
exec $term --class $window_work_terminal_backend_class
exec $term --class $window_work_terminal_live_class
exec $term --class $window_work_terminal_misc_class

exec --no-startup-id spotify
exec --no-startup-id slack
exec --no-startup-id signal-desktop

exec --no-startup-id google-chrome --user-data-dir="/home/radek/.config/google-chrome-work-1" --class="$window_work_1_browser_class"
exec --no-startup-id browser_private
